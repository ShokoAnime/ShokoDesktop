<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:Shoko.Desktop.ViewModel"
                    xmlns:mwt="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero"                   
                    xmlns:viewModel="clr-namespace:Shoko.Desktop.ViewModel"
                    xmlns:wpfHelpers="clr-namespace:Shoko.Desktop.WPFHelpers"
                    xmlns:userControls="clr-namespace:Shoko.Desktop.UserControls"
                    xmlns:customToolTips="clr-namespace:Shoko.Desktop.UserControls.Custom_ToolTips">

    <Style x:Key="BorderControlStyle2" TargetType="{x:Type Border}">
        <Setter Property="BorderBrush" Value="#FF000000" />
        <Setter Property="BorderThickness" Value="1,1,1,1" />
        <Setter Property="CornerRadius" Value="8,8,8,8" />
        <Setter Property="Margin" Value="5,5,5,5" />
        <Setter Property="Padding" Value="3,3,3,3" />
        <Setter Property="Background" Value="#FF8FC4F2" />
    </Style>

    <Style TargetType="ToolTip">
        <Setter Property = "HorizontalOffset" Value="0"/>
        <Setter Property = "VerticalOffset" Value="10"/>
        <Setter Property = "Placement" Value="Right"/>
        <Setter Property = "HasDropShadow" Value="false"/>
        <Setter Property = "Margin" Value="0,0,0,0"/>
    </Style>

    <Style x:Key="BorderControlStyle" TargetType="{x:Type Border}">
        <Setter Property="BorderBrush" Value="#FF000000" />
        <Setter Property="BorderThickness" Value="1,1,1,1" />
        <Setter Property="Margin" Value="1,1,1,1" />
        <Setter Property="Padding" Value="1,1,1,1" />
        <Setter Property="Background" Value="#FF8FC4F2" />
    </Style>

    <Style x:Key="ToolbarBorderControlStyle" TargetType="{x:Type Border}">
        <Setter Property="BorderBrush" Value="LightGray" />
        <Setter Property="BorderThickness" Value="1,1,1,1" />
    </Style>

    <Style x:Key="ContentBlockBorderStyle" TargetType="{x:Type Border}">
        <Setter Property="BorderBrush" Value="LightBlue" />
        <Setter Property="BorderThickness" Value="1,1,1,1" />
        <Setter Property="Margin" Value="4,4,4,4" />
        <Setter Property="Padding" Value="5,5,5,5" />
        <Setter Property="Background" Value="AliceBlue" />
    </Style>

    

    <Style x:Key="LinkButton" TargetType="Button">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <TextBlock TextDecorations="Underline">
                    <ContentPresenter />
                    </TextBlock>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Foreground" Value="Blue" />
        <Setter Property="Cursor" Value="Hand" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Foreground" Value="Red" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Color x:Key="DefaultColor" A="255" R="240" G ="240" B="240"/>
    <Color x:Key="HighlightColor" A="255" R="229" G ="229" B="229"/>
    <Color x:Key="PressedColor" A="255" R="215" G ="215" B="215"/>

    <SolidColorBrush x:Key="DefaultBrush" Color="{StaticResource DefaultColor}" />
    <SolidColorBrush x:Key="HighlightBrush" Color="{StaticResource HighlightColor}" />
    <SolidColorBrush x:Key="PressedBrush" Color="{StaticResource PressedColor}" />

    <!-- FlatButtonStyle -->
    <Style TargetType="Button" x:Key="FlatButtonStyle">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="Padding" Value="3,3,3,3" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border BorderThickness="{TemplateBinding BorderThickness}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    Background="{TemplateBinding Background}"
                    Padding="{TemplateBinding Padding}"
                    CornerRadius="0">
                        <ContentControl Content="{TemplateBinding Content}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource HighlightBrush}" />
                <Setter Property="BorderThickness" Value="1" />
                <Setter Property="BorderBrush" Value="Black" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{StaticResource PressedBrush}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- RoundButtonStyle -->
    <Style TargetType="Button" x:Key="RoundButtonStyle">
        <Setter Property="OverridesDefaultStyle" Value="False" />
        <Setter Property="Background" Value="White" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="BorderBrush" Value="DarkGray" />
        <Setter Property="Padding" Value="3,3,3,3" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border BorderThickness="{TemplateBinding BorderThickness}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    Background="{TemplateBinding Background}"
                    Padding="{TemplateBinding Padding}"
                    CornerRadius="4">
                        <ContentControl Content="{TemplateBinding Content}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource HighlightBrush}" />
                <Setter Property="BorderThickness" Value="1" />
                <Setter Property="BorderBrush" Value="Black" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{StaticResource PressedBrush}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <LinearGradientBrush x:Key="CheckedBlue" StartPoint="0,0" EndPoint="0,1">
        <GradientStop Color="#FF285AB3" Offset="0" />
        <GradientStop Color="#FF4184EC" Offset="0.5" />
        <GradientStop Color="#FF558BED" Offset="0.5" />
        <GradientStop Color="#FF7DACF0" Offset="1" />
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="CheckedOrange" StartPoint="0,0" EndPoint="0,1">
        <GradientStop Color="#FFCA6A13" Offset="0" />
        <GradientStop Color="#FFF67D0C" Offset="0.2" />
        <GradientStop Color="#FFFE7F0C" Offset="0.2" />
        <GradientStop Color="#FFFA8E12" Offset="0.5" />
        <GradientStop Color="#FFFF981D" Offset="0.5" />
        <GradientStop Color="#FFFCBC5A" Offset="1" />
    </LinearGradientBrush>
    <SolidColorBrush x:Key="CheckedOrangeBorder" Color="#FF8E4A1B" />
    <SolidColorBrush x:Key="CheckedBlueBorder" Color="#FF143874" />
    <Style x:Key="OrangeSwitchStyle" TargetType="{x:Type CheckBox}">
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}" />
        <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="OnChecking">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="slider" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="53" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="OnUnchecking">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="slider" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="0" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <DockPanel x:Name="dockPanel">
                        <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" ContentTemplate="{TemplateBinding ContentTemplate}" RecognizesAccessKey="True" VerticalAlignment="Center" />
                        <Grid>
                            <Border x:Name="BackgroundBorder" BorderBrush="#FF939393" BorderThickness="1" CornerRadius="3" Height="27" Width="94">
                                <Border.Background>
                                    <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                        <GradientStop Color="#FFB5B5B5" Offset="0" />
                                        <GradientStop Color="#FFDEDEDE" Offset="0.1" />
                                        <GradientStop Color="#FFEEEEEE" Offset="0.5" />
                                        <GradientStop Color="#FFFAFAFA" Offset="0.5" />
                                        <GradientStop Color="#FFFEFEFE" Offset="1" />
                                    </LinearGradientBrush>
                                </Border.Background>
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition />
                                        <ColumnDefinition />
                                    </Grid.ColumnDefinitions>
                                    <Ellipse x:Name="Off" Width="14" Height="14" Stroke="#FF7A7A7A" StrokeThickness="2" Grid.Column="1" HorizontalAlignment="Center" VerticalAlignment="Center" />
                                    <Line x:Name="On" X1="0" Y1="0" X2="0" Y2="14" Stroke="#FF7A7A7A" StrokeThickness="2" Grid.Column="0" HorizontalAlignment="Center" VerticalAlignment="Center" />
                                </Grid>
                            </Border>
                            <Border BorderBrush="#FF939393" HorizontalAlignment="Left" x:Name="slider" Width="41" Height="27" BorderThickness="1" CornerRadius="3" RenderTransformOrigin="0.5,0.5" Margin="0">
                                <Border.RenderTransform>
                                    <TransformGroup>
                                        <ScaleTransform ScaleX="1" ScaleY="1" />
                                        <SkewTransform AngleX="0" AngleY="0" />
                                        <RotateTransform Angle="0" />
                                        <TranslateTransform X="0" Y="0" />
                                    </TransformGroup>
                                </Border.RenderTransform>
                                <Border.Background>
                                    <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                        <GradientStop Color="#FFF0F0F0" Offset="0" />
                                        <GradientStop Color="#FFCDCDCD" Offset="0.1" />
                                        <GradientStop Color="#FFFBFBFB" Offset="1" />
                                    </LinearGradientBrush>
                                </Border.Background>
                            </Border>
                        </Grid>
                    </DockPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Trigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource OnUnchecking}" x:Name="OnUnchecking_BeginStoryboard" />
                            </Trigger.ExitActions>
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource OnChecking}" x:Name="OnChecking_BeginStoryboard" />
                            </Trigger.EnterActions>
                            <Setter TargetName="On" Property="Stroke" Value="White" />
                            <Setter TargetName="Off" Property="Stroke" Value="White" />
                            <!-- Change Orange or Blue color here -->
                            <Setter TargetName="BackgroundBorder" Property="Background" Value="{StaticResource CheckedOrange}" />
                            <Setter TargetName="BackgroundBorder" Property="BorderBrush" Value="{StaticResource CheckedOrangeBorder}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <!-- ToDo: Add Style for Isenabled == False -->
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- ToggleButtonStyle -->
    <Style TargetType="ToggleButton" x:Key="ToggleButtonStyle">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Background" Value="White" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="BorderBrush" Value="DarkGray" />
        <Setter Property="Padding" Value="5" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Border BorderThickness="{TemplateBinding BorderThickness}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    Background="{TemplateBinding Background}"
                    Padding="{TemplateBinding Padding}"
                    CornerRadius="4">
                        <ContentControl Content="{TemplateBinding Content}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="BorderThickness" Value="0" />
                <Setter Property="BorderBrush" Value="Black" />
                <Setter Property="FontWeight" Value="Bold" />
            </Trigger>
            <Trigger Property="IsChecked" Value="False">
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="BorderThickness" Value="0" />
                <Setter Property="FontWeight" Value="Normal" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="FontWeight" Value="Bold" />
                <Setter Property="Foreground" Value="Green" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- FlatButtonStyleDark -->
    <Style TargetType="Button" x:Key="FlatButtonStyleDark">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="Padding" Value="3,3,3,3" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border BorderThickness="{TemplateBinding BorderThickness}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    Background="{TemplateBinding Background}"
                    Padding="{TemplateBinding Padding}"
                    CornerRadius="0">
                        <ContentControl Content="{TemplateBinding Content}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#2D2D2D" />
                <Setter Property="BorderThickness" Value="1" />
                <Setter Property="BorderBrush" Value="White" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{StaticResource PressedBrush}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- PlayButtonStyle -->
    <Style TargetType="Button" x:Key="PlayButtonStyle">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Background" Value="{StaticResource HighlightBrush}" />
        <Setter Property="Foreground" Value="Black" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="BorderBrush" Value="Gray" />
        <Setter Property="Padding" Value="3,3,3,3" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border BorderThickness="{TemplateBinding BorderThickness}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    Background="{TemplateBinding Background}"
                    Padding="{TemplateBinding Padding}"
                    CornerRadius="4">
                        <ContentControl Content="{TemplateBinding Content}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource HighlightBrush}" />
                <Setter Property="BorderThickness" Value="1" />
                <Setter Property="BorderBrush" Value="Black" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{StaticResource PressedBrush}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <LinearGradientBrush x:Key="BlueGradientBrush" EndPoint="0,1" StartPoint="0,0">
        <GradientStop Color="SteelBlue" Offset="0.0"/>
        <GradientStop Color="SteelBlue" Offset="1.0"/>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="GreenGradientBrush" EndPoint="0,1" StartPoint="0,0">
        <GradientStop Color="SeaGreen" Offset="0.0"/>
        <GradientStop Color="SeaGreen" Offset="1.0"/>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="TenbitGradientBrush" EndPoint="0,1" StartPoint="0,0">
        <GradientStop Color="DarkGoldenrod" Offset="0.0"/>
        <GradientStop Color="DarkGoldenrod" Offset="1.0"/>
    </LinearGradientBrush>

    <!-- VideoDefStyle_Hi08P -->
    <Style TargetType="Label" x:Key="VideoDefStyle_Hi08P">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Background" Value="{StaticResource TenbitGradientBrush}" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="Padding" Value="3,3,3,3" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Label">
                    <Border BorderThickness="1"
                    BorderBrush="DarkGoldenrod"
                    Background="{StaticResource TenbitGradientBrush}"
                    Padding="{TemplateBinding Padding}"
                    CornerRadius="4">
                        <ContentControl Content="{TemplateBinding Content}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!-- VideoDefStyle_Hi10P -->
    <Style TargetType="Label" x:Key="VideoDefStyle_Hi10P">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Background" Value="{StaticResource TenbitGradientBrush}" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="Padding" Value="3,3,3,3" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Label">
                    <Border BorderThickness="1"
                    BorderBrush="DarkGoldenrod"
                    Background="{StaticResource TenbitGradientBrush}"
                    Padding="{TemplateBinding Padding}"
                    CornerRadius="4">
                        <ContentControl Content="{TemplateBinding Content}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- VideoDefStyle_Hi12P -->
    <Style TargetType="Label" x:Key="VideoDefStyle_Hi12P">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Background" Value="{StaticResource TenbitGradientBrush}" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="Padding" Value="3,3,3,3" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Label">
                    <Border BorderThickness="1"
                    BorderBrush="DarkGoldenrod"
                    Background="{StaticResource TenbitGradientBrush}"
                    Padding="{TemplateBinding Padding}"
                    CornerRadius="4">
                        <ContentControl Content="{TemplateBinding Content}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- VideoDefStyle -->
    <Style TargetType="Label" x:Key="VideoDefStyle">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Background" Value="{StaticResource BlueGradientBrush}" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="Padding" Value="3,3,3,3" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Label">
                    <Border BorderThickness="1"
                    BorderBrush="Navy"
                    Background="{StaticResource BlueGradientBrush}"
                    Padding="{TemplateBinding Padding}"
                    CornerRadius="4">
                        <ContentControl Content="{TemplateBinding Content}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- VideoDefStyle_Source -->
    <Style TargetType="Label" x:Key="VideoDefStyle_Source">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Background" Value="{StaticResource GreenGradientBrush}" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="Padding" Value="3,3,3,3" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Label">
                    <Border BorderThickness="1"
                    BorderBrush="Black"
                    Background="{StaticResource GreenGradientBrush}"
                    Padding="{TemplateBinding Padding}"
                    CornerRadius="4">
                        <ContentControl Content="{TemplateBinding Content}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- BreadCrumbButtonStyle -->
    <Style TargetType="Button" x:Key="BreadCrumbButtonStyle">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Background" Value="Ivory" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="BorderBrush" Value="Black" />
        <Setter Property="Padding" Value="3" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border BorderThickness="{TemplateBinding BorderThickness}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    Background="{TemplateBinding Background}"
                    Padding="{TemplateBinding Padding}"
                    CornerRadius="0">
                        <ContentControl Content="{TemplateBinding Content}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource HighlightBrush}" />
                <Setter Property="BorderThickness" Value="1" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{StaticResource PressedBrush}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- BreadCrumbBorderStyle -->
    <Style x:Key="BreadCrumbBorderStyle" TargetType="{x:Type Border}">
        <Setter Property="BorderBrush" Value="LightGray" />
        <Setter Property="BorderThickness" Value="1,0,1,1" />
    </Style>

    <Style x:Key="TreeViewItemStyleSimple" TargetType="TreeViewItem" BasedOn="{StaticResource {x:Type TreeViewItem}}">
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="Foreground" Value="Black" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="FontSize" Value="12" />
        <Setter Property="BorderBrush" Value="DarkGray" />
        <Setter Property="BorderThickness" Value="0,0,0,1" />
        
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TreeViewItem">
                    <StackPanel>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" MinWidth="0" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition />
                            </Grid.RowDefinitions>
                            <!--
                             Note that the following do not work, but I believe the top 2 should?!
                             <ToggleButton IsChecked="{TemplateBinding IsExpanded}" ClickMode="Press" Name="Expander">
                             <ToggleButton IsChecked="{TemplateBinding Property=IsExpanded}" ClickMode="Press" Name="Expander">
                             <ToggleButton IsChecked="{TemplateBinding Path=IsExpanded}" ClickMode="Press" Name="Expander">
                        -->
                            <ToggleButton IsChecked="{Binding Path=IsExpanded, RelativeSource={RelativeSource TemplatedParent}}"
                          ClickMode="Press" Name="Expander">
                                <ToggleButton.Style>
                                    <Style TargetType="ToggleButton">
                                        <Setter Property="UIElement.Focusable" Value="false" />
                                        <Setter Property="FrameworkElement.Width" Value="16" />
                                        <Setter Property="FrameworkElement.Height" Value="16" />
                                        <Setter Property="Control.Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="ToggleButton">
                                                    <Border Padding="5,5,5,5" Background="#00FFFFFF" Width="16" Height="16">
                                                        <Path Fill="#00FFFFFF" Stroke="#FF989898" Name="ExpandPath">
                                                            <Path.Data>
                                                                <PathGeometry Figures="M0,0L0,6L6,0z" />
                                                            </Path.Data>
                                                            <Path.RenderTransform>
                                                                <RotateTransform Angle="135" CenterX="3" CenterY="3" />
                                                            </Path.RenderTransform>
                                                        </Path>
                                                    </Border>
                                                    <ControlTemplate.Triggers>
                                                        <Trigger Property="UIElement.IsMouseOver" Value="True">
                                                            <Setter TargetName="ExpandPath" Property="Shape.Stroke" Value="#FF1BBBFA" />
                                                            <Setter TargetName="ExpandPath" Property="Shape.Fill" Value="#00FFFFFF" />
                                                        </Trigger>
                                                        <Trigger Property="ToggleButton.IsChecked" Value="True">
                                                            <Setter TargetName="ExpandPath" Property="UIElement.RenderTransform">
                                                                <Setter.Value>
                                                                    <RotateTransform Angle="180" CenterX="3" CenterY="3" />
                                                                </Setter.Value>
                                                            </Setter>
                                                            <Setter TargetName="ExpandPath" Property="Shape.Fill" Value="#FF595959" />
                                                            <Setter TargetName="ExpandPath" Property="Shape.Stroke" Value="#FF262626" />
                                                        </Trigger>
                                                    </ControlTemplate.Triggers>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </ToggleButton.Style>
                            </ToggleButton>
                            <Border x:Name="Bd"
                    HorizontalAlignment="Stretch"
                    BorderThickness="{TemplateBinding Border.BorderThickness}"
                    BorderBrush="{TemplateBinding Border.BorderBrush}"
                    Padding="{TemplateBinding Control.Padding}"
                    Background="{TemplateBinding Panel.Background}"
                    SnapsToDevicePixels="True"
                    Grid.Column="1">
                                <ContentPresenter x:Name="PART_Header"
                                Content="{TemplateBinding HeaderedContentControl.Header}"
                                ContentTemplate="{TemplateBinding HeaderedContentControl.HeaderTemplate}"
                                ContentStringFormat="{TemplateBinding HeaderedItemsControl.HeaderStringFormat}"
                                ContentTemplateSelector="{TemplateBinding HeaderedItemsControl.HeaderTemplateSelector}"
                                ContentSource="Header"
                                HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                                SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
                            </Border>
                            <ItemsPresenter x:Name="ItemsHost"
                            Grid.Column="1"
                            Grid.Row="1" />
                        </Grid>
                    </StackPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="TreeViewItem.IsExpanded" Value="False">
                            <Setter TargetName="ItemsHost" Property="UIElement.Visibility" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="ItemsControl.HasItems" Value="False">
                            <Setter TargetName="Expander" Property="UIElement.Visibility" Value="Hidden" />
                        </Trigger>
                        <Trigger Property="TreeViewItem.IsSelected" Value="True">
                            <Setter TargetName="Bd" Property="Panel.Background" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                            <Setter Property="TextElement.Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="TreeViewItem.IsSelected" Value="True" />
                                <Condition Property="Selector.IsSelectionActive" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Bd" Property="Panel.Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" />
                            <Setter Property="TextElement.Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
                        </MultiTrigger>
                        <Trigger Property="UIElement.IsEnabled" Value="False">
                            <Setter Property="TextElement.Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <!-- Group Filters -->
            <DataTrigger Binding="{Binding Path=ObjectType}" Value="0">
                <Setter Property="Background" Value="#FBFBFB" />
            </DataTrigger>
            <!-- Groups -->
            <DataTrigger Binding="{Binding Path=ObjectType}" Value="1">
                <Setter Property="Background" Value="White" />
            </DataTrigger>
            <!-- Series -->
            <DataTrigger Binding="{Binding Path=ObjectType}" Value="2">
                <Setter Property="Background" Value="#FBFBFB" />
            </DataTrigger>
            <!-- Episode Types -->
            <DataTrigger Binding="{Binding Path=ObjectType}" Value="3">
                <Setter Property="Background" Value="AntiqueWhite" />
            </DataTrigger>
            <!-- Episodes -->
            <DataTrigger Binding="{Binding Path=ObjectType}" Value="4">
                <Setter Property="Background" Value="White" />
            </DataTrigger>
            <!-- Files -->
            <DataTrigger Binding="{Binding Path=ObjectType}" Value="5">
                <Setter Property="Background" Value="FloralWhite" />
            </DataTrigger>
        </Style.Triggers>

        
    </Style>

    <!-- TreeViewItemStyle -->
    <Style x:Key="TreeViewItemStyle" TargetType="TreeViewItem">
        <Style.Triggers>
            <!-- Group Filters -->
            <DataTrigger Binding="{Binding Path=ObjectType}" Value="0">
                <Setter Property="Background" Value="#FBFBFB" />
            </DataTrigger>
            <!-- Groups -->
            <DataTrigger Binding="{Binding Path=ObjectType}" Value="1">
                <Setter Property="Background" Value="White" />
            </DataTrigger>
            <!-- Series -->
            <DataTrigger Binding="{Binding Path=ObjectType}" Value="2">
                <Setter Property="Background" Value="#FBFBFB" />
            </DataTrigger>
            <!-- Episode Types -->
            <DataTrigger Binding="{Binding Path=ObjectType}" Value="3">
                <Setter Property="Background" Value="AntiqueWhite" />
            </DataTrigger>
            <!-- Episodes -->
            <DataTrigger Binding="{Binding Path=ObjectType}" Value="4">
                <Setter Property="Background" Value="White" />
            </DataTrigger>
            <!-- Files -->
            <DataTrigger Binding="{Binding Path=ObjectType}" Value="5">
                <Setter Property="Background" Value="FloralWhite" />
            </DataTrigger>
        </Style.Triggers>

        <Setter Property="Foreground" Value="Black" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="FontSize" Value="12" />
        <Setter Property="BorderBrush" Value="DarkGray" />
        <Setter Property="BorderThickness" Value="0,0,0,1" />
    </Style>

    <!-- ListBoxItemStyle -->
    <Style x:Key="ListBoxItemStyle" TargetType="ListBoxItem">
        <Style.Triggers>
            <!-- Group Filters -->
            <DataTrigger Binding="{Binding Path=ObjectType}" Value="0">
                <Setter Property="Background" Value="#FBFBFB" />
            </DataTrigger>
            <!-- Groups -->
            <DataTrigger Binding="{Binding Path=ObjectType}" Value="1">
                <Setter Property="Background" Value="White" />
            </DataTrigger>
            <!-- Series -->
            <DataTrigger Binding="{Binding Path=ObjectType}" Value="2">
                <Setter Property="Background" Value="#FBFBFB" />
            </DataTrigger>
            <!-- Episode Types -->
            <DataTrigger Binding="{Binding Path=ObjectType}" Value="3">
                <Setter Property="Background" Value="AntiqueWhite" />
            </DataTrigger>
            <!-- Episodes -->
            <DataTrigger Binding="{Binding Path=ObjectType}" Value="4">
                <Setter Property="Background" Value="White" />
            </DataTrigger>
            <!-- Files -->
            <DataTrigger Binding="{Binding Path=ObjectType}" Value="5">
                <Setter Property="Background" Value="FloralWhite" />
            </DataTrigger>
        </Style.Triggers>

        <Setter Property="Foreground" Value="Black" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="FontSize" Value="12" />
        <Setter Property="BorderBrush" Value="DarkGray" />
        <Setter Property="BorderThickness" Value="0,0,0,1" />
    </Style>

    <!-- ListBoxItemStyleSeries -->
    <Style x:Key="ListBoxItemStyleSeries" TargetType="ListBoxItem">
        <Setter Property="Background" Value="#FBFBFB" />
        <Setter Property="Foreground" Value="Black" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="FontSize" Value="12" />
        <Setter Property="BorderBrush" Value="DarkGray" />
        <Setter Property="BorderThickness" Value="0,0,0,1" />
    </Style>
    
    <!-- ListBoxItemStyleFiles -->
    <Style x:Key="ListBoxItemStyleFiles" TargetType="ListBoxItem">
        <Setter Property="Background" Value="FloralWhite" />
        <Setter Property="Foreground" Value="Black" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="FontSize" Value="12" />
        <Setter Property="BorderBrush" Value="DarkGray" />
        <Setter Property="BorderThickness"  Value="0,0,0,1" />
    </Style>

    <!-- ListBoxItemStyleRecDownloads -->
    <Style x:Key="ListBoxItemStyleRecDownloads" TargetType="ListBoxItem">
        <Setter Property="Foreground" Value="Black" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="FontSize" Value="12" />
        <Setter Property="BorderBrush" Value="DarkGray" />
        <Setter Property="BorderThickness" Value="0" />
    </Style>

    <!-- ListBoxItemStyleMultipleFiles -->
    <Style x:Key="ListBoxItemStyleMultipleFiles" TargetType="ListBoxItem">
        <Setter Property="Background" Value="FloralWhite" />
        <Setter Property="Foreground" Value="Black" />
        <Setter Property="Margin" Value="0,10,0,0" />
        <Setter Property="FontSize" Value="12" />
        <Setter Property="BorderBrush" Value="DarkGray" />
        <Setter Property="BorderThickness"  Value="1,1,1,1" />
    </Style>

    <!-- ListBoxItemStylePlain -->
    <Style x:Key="ListBoxItemStylePlain" TargetType="ListBoxItem">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="Black" />
        <Setter Property="Margin" Value="0,5,0,0" />
        <Setter Property="FontSize" Value="12" />
        <Setter Property="BorderBrush" Value="DarkGray" />
        <Setter Property="BorderThickness"  Value="0" />
    </Style>

    <!-- ListBoxItemStyleFolders -->
    <Style x:Key="ListBoxItemStyleFolders" TargetType="ListBoxItem">
        <Setter Property="Background" Value="FloralWhite" />
        <Setter Property="Foreground" Value="Black" />
        <Setter Property="Padding" Value="4" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="FontSize" Value="12" />
        <Setter Property="BorderBrush" Value="DarkGray" />
        <Setter Property="BorderThickness" Value="0,0,0,1" />
    </Style>

    <!-- ListBoxItemStyleShouts -->
    <Style x:Key="ListBoxItemStyleShouts" TargetType="ListBoxItem">
        <Setter Property="Background" Value="FloralWhite" />
        <Setter Property="Foreground" Value="Black" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="Margin" Value="10" />
        <Setter Property="BorderBrush" Value="DarkGray" />
        <Setter Property="BorderThickness" Value="2" />
        <Style.Resources>
            <Style TargetType="Border">
                <Setter Property="CornerRadius" Value="4"/>
            </Style>
        </Style.Resources>
    </Style>

    <ControlTemplate x:Key="OfficeTabControl" TargetType="{x:Type TabControl}">
        <ControlTemplate.Resources>
            <Style TargetType="{x:Type TabItem}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type TabItem}">
                            <Grid SnapsToDevicePixels="True">
                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup Name="CommonStates">
                                        <VisualState Name="MouseOver">
                                            <Storyboard>
                                                <DoubleAnimation 
                                                    Storyboard.TargetName="hoverShape" 
                                                    Storyboard.TargetProperty="Opacity" 
                                                    To="1" 
                                                    Duration="0:0:.1"/>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState Name="Normal">
                                            <Storyboard>
                                                <DoubleAnimation 
                                                    Storyboard.TargetName="hoverShape" 
                                                    Storyboard.TargetProperty="Opacity" 
                                                    To="0"
                                                    Duration="0:0:.1"/>
                                            </Storyboard>
                                        </VisualState>
                                    </VisualStateGroup>
                                    <VisualStateGroup Name="SelectionStates">
                                        <VisualState Name="Selected">
                                            <Storyboard>
                                                <DoubleAnimation 
                                                    Storyboard.TargetName="buttonShape" Storyboard.TargetProperty="Opacity" 
                                                    To="1" Duration="0:0:.3"/>
                                                <DoubleAnimation 
                                                    Storyboard.TargetName="buttonBackgroundShape" 
                                                    Storyboard.TargetProperty="Opacity" To="1" Duration="0"/>
                                                <DoubleAnimation 
                                                    Storyboard.TargetName="hoverShape" Storyboard.TargetProperty="Opacity" 
                                                    To="0" Duration="0:0:.1"/>
                                                <ColorAnimation 
                                                    Storyboard.TargetName="buttonText" 
                                                    Storyboard.TargetProperty="(TextBlock.Foreground).(Color)" 
                                                    To="White" Duration="0:0:.1" />

                                            </Storyboard>
                                        </VisualState>
                                        <VisualState Name="Unselected">
                                            <Storyboard>
                                                <DoubleAnimation  
                                                    Storyboard.TargetName="buttonShape" 
                                                    Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:.1"/>
                                                <DoubleAnimation 
                                                    Storyboard.TargetName="buttonBackgroundShape" 
                                                    Storyboard.TargetProperty="Opacity" To="0" Duration="0"/>
                                                <DoubleAnimation 
                                                    Storyboard.TargetName="hoverShape" 
                                                    Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:.1"/>
                                            </Storyboard>
                                        </VisualState>
                                    </VisualStateGroup>
                                </VisualStateManager.VisualStateGroups>
                                <Border Name="hoverShape"
                                        Height="30"
                                        Margin="0,0,1,0" 
                                        SnapsToDevicePixels="True" 
                                        BorderThickness="0,0,1,0" 
                                        BorderBrush="LightGray">
                                    <Border BorderBrush="#FFA1B7EA"
                                            BorderThickness="0,1" 
                                            Background="#FFE5EEF9" 
                                            Height="30" 
                                            SnapsToDevicePixels="True" />
                                </Border>
                                <Rectangle Name="buttonBackgroundShape" 
                                           Stretch="Fill" Opacity="0" 
                                           Fill="White" Height="30" SnapsToDevicePixels="True" />
                                <Border 
                                    Name="buttonShape" 
                                    Opacity="0" 
                                    BorderBrush="#FF0343A6" 
                                    BorderThickness="0,2" 
                                    Height="30"
                                    SnapsToDevicePixels="True">
                                    <Path 
                                        Data="M214,108 L346,108 346.125,118.125 337.75,126.125 346.375,134 346.375,143.875 214.25,144.25 z" 
                                        SnapsToDevicePixels="True" 
                                        Stretch="Fill"
                                        Height="30">
                                        <Path.Fill>
                                            <RadialGradientBrush GradientOrigin="0.2,0.5" RadiusX="0.8" RadiusY="0.8">
                                                <GradientStop Color="#FF5FA3F6" Offset="0" />
                                                <GradientStop Color="#FF0C55B9" Offset="1" />
                                            </RadialGradientBrush>
                                        </Path.Fill>
                                    </Path>
                                </Border>
                                <ContentPresenter 
                                    Name="buttonText"
                                    Margin="15,0,5,0" 
                                    TextBlock.FontFamily="Calibri" 
                                    TextBlock.FontSize="10pt" 
                                    TextBlock.Foreground="Black" 
                                    Content="{TemplateBinding Header}"
                                    VerticalAlignment="Center"/>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </ControlTemplate.Resources>
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="160" />
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>
            <Border Background="#FFE9ECEF" 
                    Grid.Column="0" 
                    BorderBrush="LightGray" 
                    BorderThickness="1" 
                    SnapsToDevicePixels="True" />
            <StackPanel IsItemsHost="True"
                        Grid.Column="0"
                        Margin="0,0,-1,0" 
                        SnapsToDevicePixels="True" />
            <ContentPresenter 
                Content="{TemplateBinding SelectedContent}" 
                Grid.Column="1" 
                Margin="15,0,0,0" />
        </Grid>
    </ControlTemplate>






    <Style x:Key="TabItemFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle SnapsToDevicePixels="true" Stroke="Black" StrokeDashArray="1 2" StrokeThickness="1" Margin="3,3,3,1"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <SolidColorBrush x:Key="TabControlNormalBorderBrush" Color="#8C8E94"/>
    <LinearGradientBrush x:Key="TabItemHotBackground" EndPoint="0,1" StartPoint="0,0">
        <GradientStop Color="#EAF6FD" Offset="0.15"/>
        <GradientStop Color="#D9F0FC" Offset=".5"/>
        <GradientStop Color="#BEE6FD" Offset=".5"/>
        <GradientStop Color="#A7D9F5" Offset="1"/>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="TabItemSelectedBackground" Color="#F9F9F9"/>
    <SolidColorBrush x:Key="TabItemHotBorderBrush" Color="#3C7FB1"/>
    <SolidColorBrush x:Key="TabItemDisabledBackground" Color="#F4F4F4"/>
    <SolidColorBrush x:Key="TabItemDisabledBorderBrush" Color="#FFC9C7BA"/>
    <Style TargetType="{x:Type userControls:CloseableTabItem}" >
        <Style.Resources>
            <LinearGradientBrush x:Key="ButtonNormalBackground" EndPoint="0,1" StartPoint="0,0">
                <GradientStop Color="#F3F3F3" Offset="0"/>
                <GradientStop Color="#EBEBEB" Offset="0.5"/>
                <GradientStop Color="#DDDDDD" Offset="0.5"/>
                <GradientStop Color="#CDCDCD" Offset="1"/>
            </LinearGradientBrush>
            <LinearGradientBrush x:Key="ButtonOverBackground" EndPoint="0,1" StartPoint="0,0">
                <GradientStop Color="#FFFAFAFA" Offset="0"/>
                <GradientStop Color="#FFE0E0E3" Offset="1"/>
            </LinearGradientBrush>
            <LinearGradientBrush x:Key="ButtonPressedBackground" EndPoint="0,1" StartPoint="0,0">
                <GradientStop Color="#FFE0E0E2" Offset="0"/>
                <GradientStop Color="#FFF8F8F8" Offset="1"/>
            </LinearGradientBrush>
            <SolidColorBrush x:Key="ButtonNormalBorder" Color="#FF969696"/>
            <Style x:Key="CloseableTabItemButtonStyle" TargetType="{x:Type Button}">
                <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                <Setter Property="Background" Value="{StaticResource ButtonNormalBackground}"/>
                <Setter Property="BorderBrush" Value="{StaticResource ButtonNormalBorder}"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                <Setter Property="HorizontalContentAlignment" Value="Center"/>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
                <Setter Property="Padding" Value="4"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Grid>
                                <Border SnapsToDevicePixels="true" x:Name="Chrome" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="2" Opacity="0" />
                                <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" RecognizesAccessKey="True"/>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Opacity" TargetName="Chrome" Value="1"/>
                                    <Setter Property="Background" TargetName="Chrome" Value="{DynamicResource ButtonOverBackground}" />
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter Property="Opacity" TargetName="Chrome" Value="1"/>
                                    <Setter Property="Background" TargetName="Chrome" Value="{DynamicResource ButtonPressedBackground}" />
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Foreground" Value="#ADADAD"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </Style.Resources>
        <Setter Property="FocusVisualStyle" Value="{StaticResource TabItemFocusVisual}"/>
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="Padding" Value="6,5,6,5"/>
        <Setter Property="BorderBrush" Value="{StaticResource TabControlNormalBorderBrush}"/>
        <Setter Property="Background" Value="{StaticResource ButtonNormalBackground}"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Stretch"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type userControls:CloseableTabItem}">
                    <Grid SnapsToDevicePixels="true">
                        <Border x:Name="Bd" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1,1,1,0" >
                            <DockPanel x:Name="ContentPanel">
                                <Button x:Name="PART_Close" HorizontalAlignment="Center" Margin="3,0,3,0" VerticalAlignment="Center" Width="16" Height="16" DockPanel.Dock="Right" Style="{DynamicResource CloseableTabItemButtonStyle}" ToolTip="{Resx ResxName=Shoko.Commons.Properties.Resources, Key=Tooltip_StylesCloseTab}">
                                    <Path x:Name="Path" Stretch="Fill" StrokeThickness="0.5" Stroke="#FF333333" Fill="#FF969696" Data="F1 M 2.28484e-007,1.33331L 1.33333,0L 4.00001,2.66669L 6.66667,6.10352e-005L 8,1.33331L 5.33334,4L 8,6.66669L 6.66667,8L 4,5.33331L 1.33333,8L 1.086e-007,6.66669L 2.66667,4L 2.28484e-007,1.33331 Z " HorizontalAlignment="Stretch" VerticalAlignment="Stretch"/>
                                </Button>
                                <ContentPresenter x:Name="Content" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" ContentSource="Header" RecognizesAccessKey="True" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="{TemplateBinding Padding}"/>
                            </DockPanel>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" SourceName="PART_Close" Value="True">
                            <Setter Property="Fill" TargetName="Path" Value="#FFB83C3D"/>
                        </Trigger>
                        <Trigger Property="IsPressed" SourceName="PART_Close" Value="True">
                            <Setter Property="Fill" TargetName="Path" Value="#FF9D3838"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" TargetName="Bd" Value="{StaticResource TabItemHotBackground}"/>
                        </Trigger>
                        <Trigger Property="IsSelected" Value="true">
                            <Setter Property="Panel.ZIndex" Value="1"/>
                            <Setter Property="Background" TargetName="Bd" Value="{StaticResource TabItemSelectedBackground}"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="false"/>
                                <Condition Property="IsMouseOver" Value="true"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource TabItemHotBorderBrush}"/>
                        </MultiTrigger>
                        <Trigger Property="TabStripPlacement" Value="Bottom">
                            <Setter Property="BorderThickness" TargetName="Bd" Value="1,0,1,1"/>
                        </Trigger>
                        <Trigger Property="TabStripPlacement" Value="Left">
                            <Setter Property="BorderThickness" TargetName="Bd" Value="1,1,0,1"/>
                        </Trigger>
                        <Trigger Property="TabStripPlacement" Value="Right">
                            <Setter Property="BorderThickness" TargetName="Bd" Value="0,1,1,1"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="true"/>
                                <Condition Property="TabStripPlacement" Value="Top"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Margin" Value="-2,-2,-2,-1"/>
                            <Setter Property="Margin" TargetName="ContentPanel" Value="0,0,0,1"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="true"/>
                                <Condition Property="TabStripPlacement" Value="Bottom"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Margin" Value="-2,-1,-2,-2"/>
                            <Setter Property="Margin" TargetName="ContentPanel" Value="0,1,0,0"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="true"/>
                                <Condition Property="TabStripPlacement" Value="Left"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Margin" Value="-2,-2,-1,-2"/>
                            <Setter Property="Margin" TargetName="ContentPanel" Value="0,0,1,0"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="true"/>
                                <Condition Property="TabStripPlacement" Value="Right"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Margin" Value="-1,-2,-2,-2"/>
                            <Setter Property="Margin" TargetName="ContentPanel" Value="1,0,0,0"/>
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" TargetName="Bd" Value="{StaticResource TabItemDisabledBackground}"/>
                            <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource TabItemDisabledBorderBrush}"/>
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <SolidColorBrush x:Key="tabHeaderDisabled" Color="Gray"/>
    <SolidColorBrush x:Key="tabHeaderSelected" Color="DarkBlue"/>

    <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
    <wpfHelpers:InverseBooleanToVisibilityConverter x:Key="InverseBooleanToVisibilityConverter"/>
    <wpfHelpers:InverseBooleanConverter x:Key="InverseBooleanConverter"/>
    <Style x:Key="tabMain"  TargetType="{x:Type TabControl}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabControl}">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition  Height="40"/>
                            <RowDefinition  Height="*"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>

                        <!-- Background -->
                        <StackPanel Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2" Orientation="Horizontal">
                            <StackPanel.Background>
                                <ImageBrush ImageSource="/Images/navbar.png" TileMode="Tile" ViewportUnits="Absolute" Viewport="0,0,40,40" />
                            </StackPanel.Background>
                        </StackPanel>

                        <!-- Tab Items -->
                        <StackPanel Grid.Row="0" Grid.Column="0" Panel.ZIndex="1" Orientation="Horizontal" IsItemsHost="True"/>

                        <!-- Buttons - normal -->
                        <StackPanel Grid.Row="0" Grid.Column="1" Orientation="Horizontal" VerticalAlignment="Center"
                                    Visibility="{Binding Source={x:Static viewModel:VM_UserSettings.Instance}, Path=WindowNormal, Converter={StaticResource BooleanToVisibilityConverter}}">

                            <Button Margin="0,2,2,2" Style="{DynamicResource FlatButtonStyle}" ToolTip="{Resx ResxName=Shoko.Commons.Properties.Resources, Key=Tooltip_StylesFullScreen}" Command="{DynamicResource WindowFullScreenCommand}">
                                <StackPanel Orientation="Horizontal" VerticalAlignment="Center" >
                                    <Image Height="24" Width="24" Source="/Images/Metro/fullscreen.png" Margin="0,0,0,0"/>
                                </StackPanel>
                            </Button>

                        </StackPanel>

                        <!-- Buttons - full screen -->
                        <StackPanel Grid.Row="0" Grid.Column="1" Orientation="Horizontal" VerticalAlignment="Center"
                                    Visibility="{Binding Source={x:Static viewModel:VM_UserSettings.Instance}, Path=WindowFullScreen, Converter={StaticResource BooleanToVisibilityConverter}}">

                            <Button Margin="0,2,2,2" Style="{DynamicResource FlatButtonStyle}" ToolTip="{Resx ResxName=Shoko.Commons.Properties.Resources, Key=Tooltip_StylesMinimize}" Command="{DynamicResource WindowMinimizeCommand}">
                                <StackPanel Orientation="Horizontal" VerticalAlignment="Center" >
                                    <Image Height="24" Width="24" Source="/Images/Metro/minimize.png" Margin="0,0,0,0"/>
                                </StackPanel>
                            </Button>

                            <Button Margin="0,2,2,2" Style="{DynamicResource FlatButtonStyle}" ToolTip="{Resx ResxName=Shoko.Commons.Properties.Resources, Key=Tooltip_StylesNormal}" Command="{DynamicResource WindowNormalCommand}">
                                <StackPanel Orientation="Horizontal" VerticalAlignment="Center" >
                                    <Image Height="24" Width="24" Source="/Images/Metro/maximize.png" Margin="0,0,0,0"/>
                                </StackPanel>
                            </Button>

                            <Button Margin="0,2,2,2" Style="{DynamicResource FlatButtonStyle}" ToolTip="{Resx ResxName=Shoko.Commons.Properties.Resources, Key=Tooltip_StylesExit}" Command="{DynamicResource WindowCloseCommand}">
                                <StackPanel Orientation="Horizontal" VerticalAlignment="Center" >
                                    <Image Height="24" Width="24" Source="/Images/Metro/close.png" Margin="0,0,0,0"/>
                                </StackPanel>
                            </Button>

                        </StackPanel>

                        <!-- Tab Item Content -->
                        <Border Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2" BorderBrush="Black" BorderThickness="0" Background="{TemplateBinding Background}" CornerRadius="0">
                            <ContentPresenter ContentSource="SelectedContent" />
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type TabItem}" x:Key="tabMainItem">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabItem}">
                    <Grid>
                        <Border Name="Border" Margin="6"  BorderBrush="Black" BorderThickness="0" CornerRadius="2" >
                            <StackPanel Orientation="Horizontal">

                                <!-- Header placeholder-->
                                <ContentPresenter x:Name="ContentSite" VerticalAlignment="Center" HorizontalAlignment="Left" ContentSource="Header"
                                    Margin="6,3,6,3" RecognizesAccessKey="True"/>
                            </StackPanel>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>

                        <!-- When user hovers over tab -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Border.IsMouseOver" Value="True"/>
                                <Condition Property="IsSelected" Value="False"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Border" Property="Background" Value="#2D2D2D" />
                        </MultiTrigger>

                        
                        <!-- The current selected tab -->
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Panel.ZIndex" Value="100" />
                            <Setter TargetName="Border" Property="Background" Value="#2D2D2D" />
                            <Setter TargetName="Border" Property="BorderThickness" Value="1" />
                        </Trigger>
                        
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="FlatComboBox"  TargetType="{x:Type ComboBox}">
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="VerticalAlignment" Value="Top"/>
        <Setter Property="MinWidth" Value="60"/>
        <Setter Property="UIElement.SnapsToDevicePixels" Value="True"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="True"/>
        <Setter Property="TextElement.Foreground" Value="Black"/>
        <Setter Property="FrameworkElement.FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="BorderBrush" Value="DarkGray"/>
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Background" Value="Transparent" />
    </Style>
    
    <Style TargetType="{x:Type customToolTips:CustomToolTip}">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="HasDropShadow" Value="True"/>
        <Setter Property="HasRoundCorners" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type customToolTips:CustomToolTip}">
                    <mwt:SystemDropShadowChrome Color="#00FFFFFF" Name="Shdw" SnapsToDevicePixels="True">
                        <Border Background="FloralWhite" BorderThickness="1" BorderBrush="DarkGray" x:Name="Bdr">
                            <ContentPresenter/>
                        </Border>
                    </mwt:SystemDropShadowChrome>

                    <ControlTemplate.Triggers>
                        <Trigger Property="ToolTipService.HasDropShadow" Value="True">
                            <Setter Property="FrameworkElement.Margin" TargetName="Shdw">
                                <Setter.Value>
                                    <Thickness>0,0,5,5</Thickness>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="mwt:SystemDropShadowChrome.Color" TargetName="Shdw">
                                <Setter.Value>
                                    <Color>#71000000</Color>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="HasRoundCorners" Value="True">
                            <Setter Property="CornerRadius" TargetName="Shdw" Value="5"/>
                            <Setter Property="CornerRadius" TargetName="Bdr" Value="5"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>